tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign)
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, n_out, n_bg, out_bg), nrow = 2))$p.value)
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, sign_out, n_bg, out_bg), nrow = 2))$p.value)
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value)
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
arrange(pvalue)
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
arrange(pvalue) %>%
left_join(goTerms) %>%
View()
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
left_join(goTerms) %>%
View()
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
View()
goTerms %>%
filter(namespace_1003 == "biological_process") -> goTerms
goTerms %>%
filter(go_id != "", ) %>%
anti_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
filter(n > 5) -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
View()
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
left_join(select(goTerms, name_1006))
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
left_join(select(goTerms, go_id, name_1006))
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join(select(goTerms, go_id, name_1006))
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", go_id, mart))
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart))
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
diffGenes %>%
left_join(geneNames, by = c("ID" = "ensembl_gene_id")) %>%
head(n = 500) -> signifGenes
goTerms <- biomaRt::getBM(c("ensembl_gene_id", "go_id", "name_1006", "definition_1006", "namespace_1003"),
"ensembl_gene_id", geneNames$ensembl_gene_id, mart)
goTerms <- biomaRt::getBM(c("ensembl_gene_id", "go_id", "name_1006", "definition_1006", "namespace_1003"),
"ensembl_gene_id", geneNames$ensembl_gene_id, mart)
#goTerms %>%
#  filter(namespace_1003 == "biological_process") -> goTerms
goTerms %>%
filter(go_id != "", ) %>%
anti_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
filter(n > 5) -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
diffGenes %>%
left_join(geneNames, by = c("ID" = "ensembl_gene_id")) %>%
head(n = 2500) -> signifGenes
goTerms %>%
filter(namespace_1003 == "biological_process") -> goTerms
goTerms %>%
filter(go_id != "", ) %>%
anti_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
filter(n > 5) -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
range(countsLong$expr)
genes <-
genes <- c("ENSG00000252130", "ENSG00000251838", "ENSG00000234684", "ENSG00000253696")
countsLong %>%
filter(ID %in% genes) %>%
left_join(semTable) %>%
#  mutate(sample = reorder(sample, sex, sort)) %>%
ggplot() + geom_point(aes(sample, expr, colour = sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
geom_hline(aes(yintercept = mean, colour = sex)) +
geom_ribbon(aes(sample, ymax = mean + 2 * sem, ymin = mean - 2 * sem, group = sex, fill = sex), alpha = 0.3) +
facet_wrap(~ID, scales = "free_y")
genes <- "ENSG00000012817"
countsLong %>%
filter(ID %in% genes) %>%
left_join(semTable) %>%
#  mutate(sample = reorder(sample, sex, sort)) %>%
ggplot() + geom_point(aes(sample, expr, colour = sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
geom_hline(aes(yintercept = mean, colour = sex)) +
geom_ribbon(aes(sample, ymax = mean + 2 * sem, ymin = mean - 2 * sem, group = sex, fill = sex), alpha = 0.3) +
facet_wrap(~ID, scales = "free_y")
genes <- "ENSG00000012817"
genes <- "ENSG00000012817"
genes <- "ENSG00000067646"
countsLong %>%
filter(ID %in% genes) %>%
left_join(semTable) %>%
#  mutate(sample = reorder(sample, sex, sort)) %>%
ggplot() + geom_point(aes(sample, expr, colour = sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
geom_hline(aes(yintercept = mean, colour = sex)) +
geom_ribbon(aes(sample, ymax = mean + 2 * sem, ymin = mean - 2 * sem, group = sex, fill = sex), alpha = 0.3) +
facet_wrap(~ID, scales = "free_y")
read_tsv("data/fetalBrainGenes.tsv.gz") -> countsWide
countsWide %>% group_by(Chr) %>% tally()
countsWide %>% group_by(Chr) %>% tally() %>% print(n = Inf)
diffGenes %>%
mutate(pvalue = pmin(pt(tstat, df = 120 - 2), pt(tstat, df = 120 - 2, lower.tail = FALSE)) * 2) %>%
mutate(expected = pvalue * nrow(.), observed = rank(pvalue)) %>%
mutate(fdr = expected/observed,
fdf2 = p.adjust(pvalue, method = "BH")) %>%
filter(pvalue < 0.05)
diffGenes %>%
mutate(pvalue = pmin(pt(tstat, df = 120 - 2), pt(tstat, df = 120 - 2, lower.tail = FALSE)) * 2) %>%
mutate(expected = pvalue * nrow(.), observed = rank(pvalue)) %>%
mutate(fdr = expected/observed,
fdf2 = p.adjust(pvalue, method = "BH")) %>%
filter(pvalue < 0.05) -> signifGenes
countsLong %>%
group_by(ID) %>%
summarise(mean_expr = mean(expr)) %>%
ggplot() + geom_histogram(aes(mean_expr), bins = 50) +
geom_viline(xintercept = 5)
countsLong %>%
group_by(ID) %>%
summarise(mean_expr = mean(expr)) %>%
ggplot() + geom_histogram(aes(mean_expr), bins = 50) +
geom_vline(xintercept = 5)
countsLong %>%
group_by(ID) %>%
summarise(mean_expr = mean(expr)) %>%
ggplot() + geom_histogram(aes(mean_expr), bins = 60) +
geom_vline(xintercept = 5)
countsLong %>%
group_by(ID) %>%
summarise(mean_expr = mean(expr)) %>%
filter(mean_expr > 5) %>%
pull(ID) -> expressedGenes
countsLong %>%
filter(ID %in% expressedGenes) %>%
left_join(sampleTable) %>%
select(ID:sex) -> countsLong
countsLong %>%
group_by(ID, sex) %>%
summarise(mean = mean(expr), sd = sd(expr), n = n()) %>%
mutate(sem = sd/sqrt(n)) %>%
ungroup() -> semTable
semTable
genes <- c("ENSG00000252130", "ENSG00000251838", "ENSG00000234684", "ENSG00000253696")
countsLong %>%
filter(ID %in% genes) %>%
left_join(semTable) %>%
#  mutate(sample = reorder(sample, sex, sort)) %>%
ggplot() + geom_point(aes(sample, expr, colour = sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
geom_hline(aes(yintercept = mean, colour = sex)) +
geom_ribbon(aes(sample, ymax = mean + 2 * sem, ymin = mean - 2 * sem, group = sex, fill = sex), alpha = 0.3) +
facet_wrap(~ID, scales = "free_y")
countsLong %>%
group_by(ID) %>%
summarise(mean_expr = mean(expr)) %>%
ggplot() + geom_histogram(aes(mean_expr), bins = 60)
countsWide %>%
select(-(Chr:end)) %>%
gather(sample, expr, -ID) -> countsLong
countsLong
countsLong %>%
group_by(ID) %>%
summarise(mean_expr = mean(expr)) %>%
ggplot() + geom_histogram(aes(mean_expr), bins = 60)
countsLong %>%
filter(ID %in% expressedGenes) %>%
left_join(sampleTable) %>%
select(ID:sex) -> countsLong
countsLong
countsLong %>%
group_by(ID, sex) %>%
summarise(mean = mean(expr), sd = sd(expr), n = n()) %>%
mutate(sem = sd/sqrt(n)) %>%
ungroup() -> semTable
semTable
genes <- c("ENSG00000252130", "ENSG00000251838", "ENSG00000234684", "ENSG00000253696")
countsLong %>%
filter(ID %in% genes) %>%
left_join(semTable) %>%
ggplot() + geom_point(aes(sample, expr, colour = sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
geom_hline(aes(yintercept = mean, colour = sex)) +
geom_ribbon(aes(sample, ymax = mean + 2 * sem, ymin = mean - 2 * sem, group = sex, fill = sex), alpha = 0.3) +
facet_wrap(~ID, scales = "free_y")
countsWide %>%
select(-(Chr:end)) %>%
gather(sample, expr, -ID) -> countsLong
countsLong
countsLong %>%
group_by(ID) %>%
summarise(mean_expr = mean(expr)) %>%
ggplot() + geom_histogram(aes(mean_expr), bins = 60)
countsLong %>%
left_join(sampleTable) %>%
select(ID:sex) -> countsLong
countsLong
countsLong %>%
group_by(ID, sex) %>%
summarise(mean = mean(expr), sd = sd(expr), n = n()) %>%
mutate(sem = sd/sqrt(n)) %>%
ungroup() -> semTable
semTable
genes <- c("ENSG00000252130", "ENSG00000251838", "ENSG00000234684", "ENSG00000253696")
countsLong %>%
filter(ID %in% genes) %>%
left_join(semTable) %>%
ggplot() + geom_point(aes(sample, expr, colour = sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
geom_hline(aes(yintercept = mean, colour = sex)) +
geom_ribbon(aes(sample, ymax = mean + 2 * sem, ymin = mean - 2 * sem, group = sex, fill = sex), alpha = 0.3) +
facet_wrap(~ID, scales = "free_y")
semTable %>%
select(-sd) %>%
gather(var, value, -(ID:sex)) %>%
unite(var, sex, var) %>%
spread(var, value) -> semWide
semWide
semWide %>%
transmute(ID = ID,
diff = Female_mean - Male_mean,
sem_diff = sqrt(Female_sem^2 + Male_sem^2)) %>%
mutate(tstat = diff/sem_diff) %>%
arrange(desc(abs(tstat))) -> diffGenes
diffGenes
countsLong %>%
semi_join(head(diffGenes, 9)) %>%
left_join(semTable) %>%
ggplot() + geom_point(aes(sample, expr, colour = sex)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
geom_hline(aes(yintercept = mean, colour = sex)) +
geom_ribbon(aes(sample, ymax = mean + 2 * sem, ymin = mean - 2 * sem, group = sex, fill = sex), alpha = 0.3) +
facet_wrap(~ID, scales = "free_y")
diffGenes %>%
mutate(pvalue = pmin(pt(tstat, df = 120 - 2), pt(tstat, df = 120 - 2, lower.tail = FALSE)) * 2) %>%
mutate(expected = pvalue * nrow(.), observed = rank(pvalue)) %>%
mutate(fdr = expected/observed) %>%
filter(pvalue < 0.05) -> signifGenes
signifGenes
diffGenes %>%
mutate(pvalue = pmin(pt(tstat, df = 120 - 2), pt(tstat, df = 120 - 2, lower.tail = FALSE)) * 2) %>%
mutate(expected = pvalue * nrow(.), observed = rank(pvalue)) %>%
mutate(fdr = expected/observed) %>%
filter(pvalue < 0.05) %>%
mutate(bias = ifelse(diff > 0, "Female", "Male")) -> signifGenes
signifGenes
goTerms %>%
filter(go_id != "", ) %>%
anti_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
filter(n > 5) -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
goTerms %>%
filter(go_id != "", ) %>%
semi_join(filter(signifGenes, bias == "Female"), by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
filter(n > 5) -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(filter(signifGenes, bias == "Male"), by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
goTerms %>%
filter(go_id != "", ) %>%
semi_join(filter(signifGenes, bias == "Female"), by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
filter(n > 5) -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(filter(signifGenes, bias == "Male"), by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = sum(signifGenes$bias == "Female") - n_bg, out_sign = sum(signifGenes$bias == "Male") - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
goTerms %>%
filter(go_id != "", ) %>%
semi_join(filter(signifGenes, bias == "Female"), by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(filter(signifGenes, bias == "Male"), by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = sum(signifGenes$bias == "Female") - n_bg, out_sign = sum(signifGenes$bias == "Male") - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
goTerms <- biomaRt::getBM(c("ensembl_gene_id", "go_id", "name_1006", "definition_1006", "namespace_1003"),
"ensembl_gene_id", geneNames$ensembl_gene_id, mart)
goTerms %>%
filter(namespace_1003 == "biological_process") -> goTerms
goTerms %>%
filter(go_id != "", ) %>%
anti_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
filter(n > 5) -> background
goTerms %>%
filter(go_id != "") %>%
semi_join(signifGenes, by = c("ensembl_gene_id" = "ID")) %>%
group_by(go_id) %>%
tally() %>%
inner_join(background, by = "go_id", suffix = c("_sign", "_bg")) %>%
mutate(out_bg = nrow(diffGenes) - n_bg, out_sign = nrow(signifGenes) - n_sign) %>%
rowwise() %>%
mutate(pvalue = fisher.test(matrix(c(n_sign, out_sign, n_bg, out_bg), nrow = 2))$p.value) %>%
ungroup() %>%
arrange(pvalue) %>%
inner_join( biomaRt::getBM(c("go_id", "name_1006", "definition_1006"),
"go_id", .$go_id, mart)) %>%
View()
